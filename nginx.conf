# Redirect HTTP -> HTTPS
server {
    listen 80;
    server_name nomtok.com www.nomtok.com;
    return 301 https://$host$request_uri;
}

# Main HTTPS Server
server {
    listen 443 ssl http2;
    server_name nomtok.com www.nomtok.com;

    # SSL Certificates (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/nomtok.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nomtok.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/nomtok.com/chain.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_conf_command Ciphersuites 'TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256';
    ssl_prefer_server_ciphers off;

    # Enable gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss image/svg+xml;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com *.gstatic.com;
        style-src 'self' 'unsafe-inline' *.googleapis.com fonts.googleapis.com;
        font-src 'self' fonts.gstatic.com;
        img-src 'self' data: blob: https: *.googleusercontent.com *.ggpht.com *.ytimg.com *.cartocdn.com *.googleapis.com picsum.photos images.pexels.com;
        connect-src 'self' *.supabase.co wss://*.supabase.co https://191.101.15.39:8030;
        frame-src 'self' *.google.com *.youtube.com www.youtube.com;
    " always;

    # Proxy Next.js app
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # API routes -> backend
    location /api/ {
        proxy_pass http://191.101.15.39:8030/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;

        if ($request_method = OPTIONS) {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # Auth callbacks
    location /auth/ {
        proxy_pass http://127.0.0.1:3000;
    }

    # Dashboard
    location /dashboard {
        proxy_pass http://127.0.0.1:3000;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "Nomtok Frontend Healthy\n";
        add_header Content-Type text/plain;
    }

    # Custom error pages (optional if Next.js handles them)
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
}
